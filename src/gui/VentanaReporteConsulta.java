package gui;

import clases.Consulta;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.util.ArrayList;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import listeners.LeerBinarios;

/**
 *
 * @author Grupo 5
 */
public class VentanaReporteConsulta extends javax.swing.JInternalFrame {
   
    private ArrayList <Consulta> datos= new ArrayList<>();
    private java.awt.Frame ventana;
    private Integer numeroPaginas;
    private Integer paginaActual=1;
    /**
     * Crea una nueva forma de IFrameConsulta
     * @param parent variable con la ventana padre
     */
    public VentanaReporteConsulta(java.awt.Frame parent) {
        initComponents();
        ventana=parent;
        // Quita la Barra de título
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        cargarTodosDatos();
        this.setVisible(true);
    }
    
    /**
     * inicializa todos los métodos necesarios para cargar la información a la tabla
     */
    public void cargarTodosDatos(){
       
        leerDatos();
        darFormatoTabla();
        cargarDatos();
        Double cedula= Double.valueOf(datos.size());
        numeroPaginas=(int)Math.ceil(cedula/10);
    }
    // Procedimiento para dar formato a la Tabla
    @SuppressWarnings("empty-statement")
    private void darFormatoTabla()
    {

        // Obtiene el Modelo de Datos
        DefaultTableModel modelo = new DefaultTableModel()
        {
            @Override
            public boolean isCellEditable(int row, int column)
            {
                    return false;
            }
        };

        
        // Añadimos columnas al modelo de datos
        modelo.addColumn("ID Consulta");
        modelo.addColumn("Fecha");
        modelo.addColumn("Consultorio");
        modelo.addColumn("ID Historial");
        modelo.addColumn("Carnet");
        modelo.addColumn("Diagnostico");
        modelo.addColumn("Receta");

        // Coloca el Modelo en la Tabla
        tblDatos.setModel(modelo);
        
        // Color de los Encabezados
        tblDatos.getTableHeader().setBackground(Color.blue);
        tblDatos.getTableHeader().setForeground(Color.white);
        tblDatos.getTableHeader().setFont(new Font("Arial Black", Font.PLAIN, 15));
        tblDatos.setFont(new Font("Arial", Font.PLAIN, 15));
    }
    
    /**
     * carga los datos de las consultas y los guarda en un arreglo
     */
    private void cargarDatos()
    {
        // Variable para el Query
        int iCuenta;
        int iMaxRows;

        // Variable para el modelo de la tabla
        DefaultTableModel tablaDatos = (DefaultTableModel) tblDatos.getModel();

        // Obtiene el Número de Datos
        iMaxRows = tablaDatos.getRowCount();

        // Ciclo para Borrar
        for (iCuenta=0; iCuenta<iMaxRows;iCuenta++)
             tablaDatos.removeRow(0);

        // Prepara los datos vacios iniciales
        Object [] fila = new Object[8];

        for(int i=paginaActual*15-15;i<paginaActual*15;i++){
            if(i<datos.size()){
                fila[0]=datos.get(i).getId();
                fila[1]=datos.get(i).getFecha();
                fila[2]=datos.get(i).getConsultorio();
                fila[3]=datos.get(i).getHistorialPaciente();
                fila[4]=datos.get(i).getCarnetMedico();
                fila[5]=datos.get(i).getDiagnostico();
                fila[6]=datos.get(i).getReceta();

                // Agrega el Dato
                tablaDatos.addRow(fila);
            }
        }
        
        // Coloca el Modelo de Nueva Cuenta
        tblDatos.setModel(tablaDatos);

        // Ciclo para agrandar la altura de los Rows
        for (int iRow=0; iRow < tblDatos.getRowCount();iRow++)
        {
            // Coloca la Altura
            tblDatos.setRowHeight(iRow, 25);
        }
    }

    /**
     * obtiene los datos del archivo .dat
     */
    public void leerDatos(){
           //Verifica si existe el archivo para proceder a leerlo
        File archivo =new File("consulta.med");
        if(archivo.canRead()){
            //recupera los datos del archivo paciente y los guarda en la variable
            datos= LeerBinarios.obtenerConsultas(ventana);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipal = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        btnPrimero = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(900, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTitulo.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Lista de Consultas");

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDatos);

        btnSalir.setBackground(java.awt.Color.red);
        btnSalir.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("X");
        btnSalir.setBorderPainted(false);
        btnSalir.setFocusPainted(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnPrimero.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 16)); // NOI18N
        btnPrimero.setText("<<");
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });

        btnAnterior.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 16)); // NOI18N
        btnAnterior.setText("<");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnSiguiente.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 16)); // NOI18N
        btnSiguiente.setText(">");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnUltimo.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 16)); // NOI18N
        btnUltimo.setText(">>");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGap(391, 391, 391)
                        .addComponent(btnPrimero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSiguiente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUltimo)
                        .addGap(0, 385, Short.MAX_VALUE))
                    .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSalir))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTitulo)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        getContentPane().add(pnlPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 1000, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // Sale de la Forma
        VentanaPrincipal.reporteConsulta=null;
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        // TODO add your handling code here:
        paginaActual=1;
        cargarTodosDatos();
    }//GEN-LAST:event_btnPrimeroActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        // TODO add your handling code here:
        paginaActual=numeroPaginas;
        cargarTodosDatos();
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
        if(paginaActual>1){
            paginaActual-=1;
            cargarTodosDatos();
        }
        
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        if(paginaActual<numeroPaginas){
            paginaActual+=1;
            cargarTodosDatos();
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables
}
